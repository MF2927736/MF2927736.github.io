
# My Coding Notebook

## Table of Contents
- [Day 1](#day-1)
  - [Notes](#notes)
  - [Practice](#practice)
- [Day 2](#day-2)
  - [Notes](#notes-for-day-2)
- [Flutter Notes](#flutter-notes)
- [Markdown Style Guide](#markdown-style-guide-for-coding-notebooks)

---

## Day 1
### Notes
Your notes for Day 1 go here.  

### Practice
Your practice work for Day 1 goes here.  

---

## Day 2
### Notes for Day 2
Write your Day 2 notes here.  

---

## Flutter Notes

### What is Flutter?
- **Definition:** Flutter is an open-source UI framework by Google for building cross-platform apps from a single codebase.  
- **Why is it useful?** It allows developers to create apps for iOS, Android, web, and desktop quickly with beautiful UIs.  

---

### Key Terms and Definitions

| Term             | Definition                                      | Example / Notes                          |
|------------------|--------------------------------------------------|-------------------------------------------|
| Widget           | Basic building block of a Flutter app.          | Everything on the screen is a widget.     |
| MaterialApp      | Wraps the app, provides theme, routes, etc.      | `MaterialApp(home: MyHome())`             |
| Scaffold         | Provides structure for a screen.                 | Has `AppBar`, `body`, `FloatingActionButton` |
| StatelessWidget  | Widget that does not change once built.          | `Text("Hello")`                           |
| StatefulWidget   | Widget that can change over time.                | A counter app button.                     |
| Navigator        | Manages app navigation and routes.               | `Navigator.pushNamed(context, '/home')`   |
| AppBar           | A top app bar with title and actions.            | `AppBar(title: Text("Home"))`             |
| Column           | Lays out children vertically.                    | `Column(children: [...])`                 |
| Row              | Lays out children horizontally.                  | `Row(children: [...])`                    |
| Container        | A box model widget for styling/layout.           | `Container(padding: EdgeInsets.all(10))`  |
| Text             | Displays a string of text.                       | `Text("Hello World")`                     |
| Image.network    | Loads an image from the internet.                | `Image.network("https://...")`            |
| Padding          | Adds spacing inside a widget.                    | `Padding(padding: EdgeInsets.all(8))`     |
| Center           | Centers its child widget.                        | `Center(child: Text("Hi"))`               |

---

### Layout and Design Widgets
- **How do you center a widget?** â†’ Wrap it in `Center()`.  
- **How do you align something to the left or right?** â†’ Use `Align()` or properties in `Row()`/`Column()`.  
- **What widget adds space around content?** â†’ `Padding`.  

---

# Markdown Style Guide for Coding Notebooks

Follow this guide to keep your coding notebook **clear, consistent, and professional**.  
This ensures your notes are easy for you (and others) to read later.

---

## ðŸ”¹ Headings
**When to use:** Organize your notebook into sections (like days, topics, or projects).  
- `#` for the notebook title (use once at the top).  
- `##` for each day or major topic.  
- `###` for subsections (like "Notes", "Practice", "Reflections").  

âœ… Example:

# My Coding Notebook  
## Day 1  
### Notes  
### Practice  

---

## ðŸ”¡ Text Formatting
- **Bold** = key terms or definitions  
- *Italic* = emphasis or side comments  
- `Inline code` = keywords, functions, or commands  

âœ… Example:

**Class** = a blueprint for objects  
*Remember:* always test your code  
Use `System.out.println()` to print  

---

## ðŸ’» Code Blocks
**When to use:** Anytime you write multiple lines of code.  

âœ… Example:

```java
public class Hello {
    public static void main(String[] args) {
        System.out.println("Hello World!");
    }
}



